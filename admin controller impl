package com.user.demo.controller;

import com.user.demo.entity.Project;
import com.user.demo.entity.Ticket;
import com.user.demo.entity.User;
import com.user.demo.service.impl.AdminServiceImpl;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/admin")
public class AdminController {

    private final AdminServiceImpl adminService;

    public AdminController(AdminServiceImpl adminService) {
        this.adminService = adminService;
    }

    /**
     * ðŸ“Œ PROJECT MANAGEMENT ENDPOINTS
     */
    @GetMapping("/projects")
    public List<Project> getAllProjects() {
        return adminService.getAllProjects();
    }

    @PostMapping("/projects")
    public String addProject(@RequestBody Project project) {
        adminService.addProject(project);
        return "Project added successfully";
    }

    @PutMapping("/projects/{id}")
    public String updateProject(@PathVariable Integer id, @RequestBody Project project) {
        adminService.updateProject(id, project);
        return "Project updated successfully";
    }

    @DeleteMapping("/projects/{id}")
    public String deleteProject(@PathVariable Integer id) {
        adminService.deleteProject(id);
        return "Project deleted successfully";
    }

    /**
     * âœ… Assign Developer to a Project
     */
    @PostMapping("/projects/{projectId}/assign/{userId}")
    public String assignDeveloperToProject(@PathVariable Integer projectId, @PathVariable Integer userId) {
        adminService.assignDeveloperToProject(projectId, userId);
        return "Developer assigned to project successfully";
    }

    /**
     * âœ… Remove Developer from a Project
     */
    @DeleteMapping("/projects/remove/{userId}")
    public String removeDeveloperFromProject(@PathVariable Integer userId) {
        adminService.removeDeveloperFromProject(userId);
        return "Developer removed from project successfully";
    }

    /**
     * ðŸ“Œ TICKET MANAGEMENT ENDPOINTS
     */
    @GetMapping("/tickets")
    public List<Ticket> getAllTickets() {
        return adminService.getAllTickets();
    }

    /**
     * âœ… Assign Developer to a Ticket
     */
    @PostMapping("/tickets/{ticketId}/assign/{userId}")
    public String assignDeveloperToTicket(@PathVariable Integer ticketId, @PathVariable Integer userId) {
        adminService.assignDeveloperToTicket(ticketId, userId);
        return "Developer assigned to ticket successfully";
    }

    /**
     * âœ… Remove Developer from a Ticket
     */
    @DeleteMapping("/tickets/remove/{ticketId}")
    public String removeDeveloperFromTicket(@PathVariable Integer ticketId) {
        adminService.removeDeveloperFromTicket(ticketId);
        return "Developer removed from ticket successfully";
    }

    /**
     * ðŸ“Œ USER MANAGEMENT ENDPOINTS
     */
    @GetMapping("/users")
    public List<User> getAllUsers() {
        return adminService.getAllUsers();
    }
}
